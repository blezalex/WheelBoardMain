/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_DRV_COMMS_PROTOCOL_PB_H_INCLUDED
#define PB_DRV_COMMS_PROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _RequestId {
    RequestId_MSG_NONE = 0,
    RequestId_READ_CONFIG = 1,
    RequestId_WRITE_CONFIG = 2,
    RequestId_GET_STATS = 3,
    RequestId_CALLIBRATE_ACC = 4,
    RequestId_SAVE_CONFIG = 5,
    RequestId_GET_DEBUG_BUFFER = 6,
    RequestId_SET_DEBUG_STREAM_ID = 7,
    RequestId_TOGGLE_PASSTHROUGH = 8,
    RequestId_GET_CONFIG_DESCRIPTOR = 9
} RequestId;

typedef enum _ReplyId {
    ReplyId_NO_REPLY = 0,
    ReplyId_GENERIC_OK = 1,
    ReplyId_GENERIC_FAIL = 2,
    ReplyId_STATS = 3,
    ReplyId_CONFIG = 4,
    ReplyId_CRC_MISMATCH = 5,
    ReplyId_DEBUG_BUFFER = 6,
    ReplyId_CONFIG_DESCRIPTOR = 7
} ReplyId;

#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _RequestId_MIN RequestId_MSG_NONE
#define _RequestId_MAX RequestId_GET_CONFIG_DESCRIPTOR
#define _RequestId_ARRAYSIZE ((RequestId)(RequestId_GET_CONFIG_DESCRIPTOR+1))

#define _ReplyId_MIN ReplyId_NO_REPLY
#define _ReplyId_MAX ReplyId_CONFIG_DESCRIPTOR
#define _ReplyId_ARRAYSIZE ((ReplyId)(ReplyId_CONFIG_DESCRIPTOR+1))


#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
